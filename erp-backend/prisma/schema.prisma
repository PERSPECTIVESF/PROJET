// This is your Prisma schema file
// Learn more in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Utilisateur {
  id            String   @id @default(uuid())
  email         String   @unique
  motDePasse    String
  role          String
  nom           String?
  prenom        String?
  formateurId   String?  @unique
  apprenantId   String?  @unique
  particulierId String?  @unique
  entrepriseId  String?  @unique

  formateur     Formateur?   @relation("FormateurToUtilisateur", fields: [formateurId], references: [id])
  apprenant     Apprenant?   @relation("ApprenantToUtilisateur", fields: [apprenantId], references: [id])
  particulier   Particulier? @relation("ParticulierToUtilisateur", fields: [particulierId], references: [id])
  entreprise    Entreprise?  @relation("EntrepriseToUtilisateur", fields: [entrepriseId], references: [id])

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Formateur {
  id             String   @id @default(uuid())
  civilite       String
  nom            String
  prenom         String
  email          String   @unique
  telephone      String?
  specialite     String?
  organisme      String?
  interne        Boolean  @default(false)
  utilisateur    Utilisateur? @relation("FormateurToUtilisateur")

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Apprenant {
  id              String   @id @default(cuid())
  code            String   @unique
  civilite        String
  nom             String
  nomUsage        String?
  prenom          String
  dateNaissance   DateTime
  adresse         String
  codePostal      String
  ville           String
  numeroSecu      String
  telephone       String
  email           String   @unique
  fonction        String?
  lieuActivite    String?
  utilisateur     Utilisateur? @relation("ApprenantToUtilisateur")

  entreprises     EntrepriseApprenant[]
  inscriptions    SessionApprenant[]
  documents       Document[]
  questionnaires  QuestionnaireSatisfaction[]

  createdAt       DateTime @default(now())
}

model Particulier {
  id              String   @id @default(uuid())
  civilite        String
  nom             String
  prenom          String
  email           String   @unique
  telephone       String?
  adresse         String?
  codePostal      String?
  ville           String?
  numeroSecu      String?  @unique
  fonction        String?
  lieuActivite    String?
  entrepriseId    String?

  entreprise      Entreprise? @relation(fields: [entrepriseId], references: [id])
  utilisateur     Utilisateur? @relation("ParticulierToUtilisateur")

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Entreprise {
  id            String   @id @default(cuid())
  siret         String   @unique
  nom           String
  adresse       String
  ville         String
  codePostal    String
  telephone     String
  email         String
  secteur       String?
  codeAPE       String?

  apprenants    EntrepriseApprenant[]
  documents     Document[]
  devis         Devis[]
  factures      Facture[]
  particuliers  Particulier[]
  utilisateurs  Utilisateur[] @relation("EntrepriseToUtilisateur")

  createdAt     DateTime @default(now())
}

model EntrepriseApprenant {
  id            String     @id @default(cuid())
  apprenant     Apprenant  @relation(fields: [apprenantId], references: [id])
  apprenantId   String
  entreprise    Entreprise @relation(fields: [entrepriseId], references: [id])
  entrepriseId  String
}

model Formation {
  id          String   @id @default(cuid())
  titre       String
  code        String   @unique
  description String?
  dureeHeures Int

  sessions    Session[]
  devis       Devis[]
  factures    Facture[]

  createdAt   DateTime @default(now())
}

model Session {
  id              String   @id @default(cuid())
  dateDebut       DateTime
  dateFin         DateTime
  lieu            String
  formateur       String
  formationId     String
  formation       Formation @relation(fields: [formationId], references: [id])

  participants    SessionApprenant[]
  documents       Document[]
  questionnaires  QuestionnaireSatisfaction[]

  createdAt       DateTime @default(now())
}

model SessionApprenant {
  id            String   @id @default(cuid())
  sessionId     String
  apprenantId   String
  inscritLe     DateTime @default(now())

  session       Session   @relation(fields: [sessionId], references: [id])
  apprenant     Apprenant @relation(fields: [apprenantId], references: [id])

  @@unique([sessionId, apprenantId])
}

model Document {
  id           String   @id @default(cuid())
  nomFichier   String
  type         String
  urlDocx      String?
  urlPdf       String?
  apprenantId  String?
  sessionId    String?
  entrepriseId String?

  apprenant    Apprenant?  @relation(fields: [apprenantId], references: [id])
  session      Session?    @relation(fields: [sessionId], references: [id])
  entreprise   Entreprise? @relation(fields: [entrepriseId], references: [id])

  createdAt    DateTime @default(now())
}

model Devis {
  id            String   @id @default(uuid())
  numero        String   @unique
  entrepriseId  String
  formationId   String
  dateEmission  DateTime
  montantHT     Float
  montantTVA    Float
  montantTTC    Float
  urlDocx       String
  urlPdf        String?

  entreprise    Entreprise @relation(fields: [entrepriseId], references: [id])
  formation     Formation  @relation(fields: [formationId], references: [id])

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Facture {
  id            String   @id @default(uuid())
  numero        String   @unique
  entrepriseId  String
  formationId   String
  dateEmission  DateTime
  montantHT     Float
  montantTVA    Float
  montantTTC    Float
  statut        String   @default("en_attente")
  urlDocx       String
  urlPdf        String?

  entreprise    Entreprise @relation(fields: [entrepriseId], references: [id])
  formation     Formation  @relation(fields: [formationId], references: [id])

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model GrilleEvaluation {
  id             String   @id @default(uuid())
  typeCible      String
  cibleId        String
  sessionId      String?
  titre          String
  note           Int
  commentaire    String?
  dateEvaluation DateTime
  urlDocx        String?
  urlPdf         String?

  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model QuestionnaireSatisfaction {
  id                   String   @id @default(uuid())
  apprenantId          String
  sessionId            String
  date                 DateTime
  satisfactionGlobale  Int
  remarques            String?
  urlDocx              String?
  urlPdf               String?

  apprenant            Apprenant @relation(fields: [apprenantId], references: [id])
  session              Session   @relation(fields: [sessionId], references: [id])

  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}
